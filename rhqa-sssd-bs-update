#!/bin/bash
#
# Update local repo and build new commits
#
# Copyright (c) 2013 Red Hat, Inc. All rights reserved.
#
# This copyrighted material is made available to anyone wishing
# to use, modify, copy, or redistribute it subject to the terms
# and conditions of the GNU General Public License version 2.
#
# This program is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

set -e -u -o pipefail -o noclobber

#
# Retrieve command-line arguments
#
declare project_dir
declare remote_repo

if [ $# != 2 ]; then
    echo "Invalid number of arguments" >&2
    echo "Usage: `basename \"\$0\"` PROJECT_DIR REMOTE_REPO" >&2
    exit 1
fi

project_dir=`readlink -f "$1"`; shift
remote_repo="$1"; shift

mkdir -p "$project_dir"
declare -r local_repo="$project_dir/git"

#
# Fetch new commits
#
declare commit_list
if ! [ -e "$local_repo" ]; then
    git init --quiet --bare "$local_repo"
fi
cd "$local_repo"
git fetch --quiet -- "$remote_repo"
if git show-ref --quiet refs/heads/last_build; then
    commit_list=`git log --format=format:%h last_build..FETCH_HEAD`
else
    commit_list=`git log --format=format:%h --reverse FETCH_HEAD`
fi

#
# Publish new commits
#
declare commit
for commit in $commit_list; do
    git update-ref refs/heads/last_build "$commit"
    set +e
    (
        set -e
        echo -n "$commit: building..." >&2
        rhqa-sssd-bs-build "$project_dir" "$commit"
        echo -n "done, publishing..." >&2
        rhqa-sssd-bs-publish "$project_dir" "$commit"
        echo "done." >&2
    )
    if [ $? != 0 ]; then
        echo "failed." >&2
    fi
    set -e
done
